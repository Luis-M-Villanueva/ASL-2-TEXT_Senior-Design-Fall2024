import serial
import cv2
import numpy as np

# Configure the serial port (adjust the port and baud rate)
serial_port = '/dev/ttyUSB0'  # Change this to your serial port
baud_rate = 4000000  # 5 Mbps baud rate for ESP32

# Open the serial port
ser = serial.Serial(serial_port, baudrate=baud_rate, timeout=1)

# Initialize OpenCV window to display data (if needed)

ser.write(b'2')
print("Waiting on connection now")
# Read and display serial data
while True:
    # Check if there is data available in the serial buffer
    if ser.in_waiting > 0:
        # Read a byte from the serial port
        byte = ser.read(1)
        
        # Optionally, you can store this byte and process it if it's an image frame
        # For example, displaying the byte as an image (if you're dealing with image data)
        # You could aggregate bytes to form a frame or display raw data
        print(f"Received byte: {byte.hex()}")  # Display the byte in hexadecimal format

        # Example: If you receive image data, you can decode it here (this assumes a simple JPEG frame)
        # Assuming that the incoming data is a JPEG image (you could adjust the frame format)
        # Read multiple bytes to form a full JPEG frame if necessary (example)
        # If you know how many bytes form a frame (e.g., a fixed frame size), you can read them in chunks.

        # In this simple case, let's assume you're dealing with JPEG data and display it:
        # You would collect enough data for a frame, decode it, and show it.
        # Assuming `byte` is part of a complete image:
        
        # Collect bytes to form a JPEG frame (for example):

# Clean up and close
ser.close()

